
# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

# Nome da pipeline no GitHub Actions
name: Publish Docker image

# Quando a pipeline é disparada
on:
  push:
    branches: [main]  # Executa quando há commits na branch main

# ========================
# Job 1: Executar Testes
# ========================
jobs:
  test:
    name: Run Tests               # Nome do job (aparece na UI do GitHub Actions)
    runs-on: ubuntu-latest        # Ambiente Linux fornecido pelo GitHub Actions
    steps:
      # Faz o checkout do código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # Configura a versão do Node.js no ambiente
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'     # A versão do Node.js usada no projeto

      # Instala todas as dependências do projeto
      - name: Install dependencies
        run: npm ci             # npm ci garante instalação limpa e rápida em CI

      # Executa os testes unitários/mocks configurados no Jest
      - name: Run Unit & Mocked Tests
        run: npm test

      # Executa testes de carga (load-test.js)
      - name: Run Load Test
        run: npm run load-test

# ========================
# Job 2: Build e Push da Imagem Docker
# ========================
  push_to_registry:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test   # Este job só executa se o job "test" passar (sucesso)
    steps:
      # Novamente faz checkout do código
      - name: Check out the repo
        uses: actions/checkout@v4
      
      # Login no Docker Hub usando secrets do GitHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Definido nos Secrets do repo
          password: ${{ secrets.DOCKER_PASSWORD }}  # Definido nos Secrets do repo
      
      # Extrai metadados da imagem Docker (tags e labels)
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: Dev2C1Vieira/Kubernetes-Auth-MicroService  # Nome da imagem no Docker Hub
      
      # Build da imagem Docker e push para Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .               # Diretório raiz do projeto (Dockerfile está aqui)
          file: ./Dockerfile       # Caminho para o Dockerfile
          push: true               # Faz push automático da imagem para Docker Hub
          tags: ${{ steps.meta.outputs.tags }}       # Usa tags extraídas pelo metadata-action
          labels: ${{ steps.meta.outputs.labels }}   # Labels Docker para versão, release, etc.
